package com.wellnessapp.model;

import java.sql.*;
import java.util.List;

public class MoodDAO implements IMoodDAO {
    private final Connection connection;
    public MoodDAO() {
        connection = DatabaseConnection.getInstance();
        createTable();
    }
    private void createTable() {
        try {
            connection.createStatement().execute(
                    "CREATE TABLE IF NOT EXISTS moods ("
                            + "id INTEGER PRIMARY KEY AUTOINCREMENT,"
                            + "timestamp Timestamp NOT NULL,"
                            + "mood VARCHAR NOT NULL,"
                            + "comment VARCHAR"
                            + ")"
            );
        } catch(SQLException exception) {
            exception.printStackTrace();
        }
    }

    /**
     * Inserts a new {@link MoodEntry} into the database.
     * <br><br>
     * Upon successful insertion, the ID generated by the database will be set back to the provided {@code MoodEntry} object.
     * @param entry the {@link MoodEntry} object containing the mood details to be inserted into the database.
     *              This object must not be {@code null}.
     * @throws SQLException Any issues executing is caught within the method and the stack trace will be printed.
     */
    @Override
    public void Create(MoodEntry entry) throws SQLException {
        try {
            PreparedStatement statement = connection.prepareStatement("INSERT INTO moods (mood, timestamp, comment) VALUES (?, ?, ?)");
            statement.setString(1, entry.getMood().toString());
            statement.setTimestamp(2, java.sql.Timestamp.valueOf(entry.getTimestamp()));
            statement.setString(3, entry.getComment());
            statement.executeUpdate();
            ResultSet generatedKeys = statement.getGeneratedKeys();
            if (generatedKeys.next()) {
                entry.setId(generatedKeys.getInt(1));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void Delete(MoodEntry entry) {

    }

    @Override
    public List<MoodEntry> getAllEntries() {
        return null;
    }
}
